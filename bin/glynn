#!/usr/bin/env ruby
require 'rubygems'
require 'jekyll'
require 'netrc'
require 'glynn'
require 'highline'
require 'io/console'
$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

netrc = Netrc.read
cli = HighLine.new

options = {}
case ARGV.size
  when 0
  when 1
    options['destination'] = ARGV[0]
  when 2
    options['source'] = ARGV[0]
    options['destination'] = ARGV[1]
  when 4
    options['source'] = ARGV[0]
    options['destination'] = ARGV[1]
    options['ftp_username'] = ARGV[2]
    options['ftp_password'] = ARGV[3]
end
options    = Jekyll.configuration(options)
ftp_port   = (options['ftp_port'] || 21).to_i
passive    = options['ftp_passive'] || true
ftp_secure = options['ftp_secure'] || false

# If _glynn.yml exists, load and merge these options
if File.file?('_glynn.yml')
  options = options.merge(YAML.load_file('_glynn.yml'))
end

# Include Username/Password from .netrc file if available
if n = netrc[options['ftp_host']]
  if options['ftp_username'] || options['ftp_password']
    cli.say cli.color(
      "The username and password settings from the configuration file" +
      " take precedence over those in the netrc file!",
      :yellow
    )
  end
  options = (Hash[['ftp_username', 'ftp_password'].zip n]).merge options
end

cli.say "Building site: #{options['source']} -> #{options['destination']}"
jekyll = Glynn::Jekyll.new
jekyll.build
cli.say cli.color("Successfully generated site", :green)

cli.say "Sending site over FTP (host: #{options['ftp_host']}, port: #{ftp_port}, ftps: #{ftp_secure})"

if options['ftp_username'].nil?
  username = cli.ask "FTP Username: "
else
  username = options['ftp_username']
end

if options['ftp_password'].nil?
  # Get the password without echoing characters
  password = cli.ask("FTP Password: ") { |q| q.echo = false }
  if cli.agree("Would you like to save this password to #{Netrc.default_path}?")
    netrc[options['ftp_host']] = username, password
    netrc.save
  end
else
  password = options['ftp_password']
end

ftp = Glynn::Ftp.new(options['ftp_host'], ftp_port, {
  :username => username,
  :password => password,
  :passive  => passive,
  :secure   => ftp_secure
})
cli.say "Connected to server. Sending site"
ftp.sync(options['destination'], options['ftp_dir'])
cli.say cli.color("Successfully sent site", :green)
